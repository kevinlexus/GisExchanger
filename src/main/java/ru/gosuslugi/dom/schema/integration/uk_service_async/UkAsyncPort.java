
package ru.gosuslugi.dom.schema.integration.uk_service_async;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import ru.gosuslugi.dom.schema.integration.base.AckRequest;
import ru.gosuslugi.dom.schema.integration.base.GetStateRequest;
import ru.gosuslugi.dom.schema.integration.uk.ExportDocumentRequest;
import ru.gosuslugi.dom.schema.integration.uk.GetStateResult;
import ru.gosuslugi.dom.schema.integration.uk.ImportDocumentMunicipalRequest;
import ru.gosuslugi.dom.schema.integration.uk.ImportDocumentRegionRequest;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.3.0
 * Generated source version: 2.2
 * 
 */
@WebService(name = "UkAsyncPort", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/uk-service-async/")
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
@XmlSeeAlso({
    ru.gosuslugi.dom.schema.integration.uk.ObjectFactory.class,
    ru.gosuslugi.dom.schema.integration.base.ObjectFactory.class,
    ru.gosuslugi.dom.schema.integration.nsi_base.ObjectFactory.class,
    org.w3._2000._09.xmldsig_.ObjectFactory.class
})
public interface UkAsyncPort {


    /**
     * Результат обработки асинхронного вызова
     * 
     * @param getStateRequest
     * @return
     *     returns ru.gosuslugi.dom.schema.integration.uk.GetStateResult
     * @throws Fault
     */
    @WebMethod(action = "urn:getState")
    @WebResult(name = "getStateResult", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/uk/", partName = "getStateResult")
    public GetStateResult getState(
        @WebParam(name = "getStateRequest", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/base/", partName = "getStateRequest")
        GetStateRequest getStateRequest)
        throws Fault
    ;

    /**
     * Импорт документов закона/нормативно-правового акта регионального уровня
     * 
     * @param importDocumentRegionRequest
     * @return
     *     returns ru.gosuslugi.dom.schema.integration.base.AckRequest
     * @throws Fault
     */
    @WebMethod(action = "urn:importDocumentRegion")
    @WebResult(name = "AckRequest", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/base/", partName = "importDocumentRegionResult")
    public AckRequest importDocumentsRegion(
        @WebParam(name = "importDocumentRegionRequest", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/uk/", partName = "importDocumentRegionRequest")
        ImportDocumentRegionRequest importDocumentRegionRequest)
        throws Fault
    ;

    /**
     * Импорт документов закона/нормативно-правового акта уровня муниципальных образований
     * 
     * @param importDocumentMunicipalRequest
     * @return
     *     returns ru.gosuslugi.dom.schema.integration.base.AckRequest
     * @throws Fault
     */
    @WebMethod(action = "urn:importDocumentMunicipal")
    @WebResult(name = "AckRequest", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/base/", partName = "importDocumentMunicipalResult")
    public AckRequest importDocumentsMunicipal(
        @WebParam(name = "importDocumentMunicipalRequest", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/uk/", partName = "importDocumentMunicipalRequest")
        ImportDocumentMunicipalRequest importDocumentMunicipalRequest)
        throws Fault
    ;

    /**
     * Экспорт документов
     * 
     * @param exportDocumentRequest
     * @return
     *     returns ru.gosuslugi.dom.schema.integration.base.AckRequest
     * @throws Fault
     */
    @WebMethod(action = "urn:exportDocument")
    @WebResult(name = "AckRequest", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/base/", partName = "exportDocumentResult")
    public AckRequest exportDocuments(
        @WebParam(name = "exportDocumentRequest", targetNamespace = "http://dom.gosuslugi.ru/schema/integration/uk/", partName = "exportDocumentRequest")
        ExportDocumentRequest exportDocumentRequest)
        throws Fault
    ;

}
